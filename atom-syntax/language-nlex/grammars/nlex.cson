'fileTypes' : [
  'nlex'
]
'name' : 'NLex'
'patterns' : [
  {
    'include' : '#main'
  }
]
'scopeName' : 'source.NLex'
'uuid' : ''
'repository' : {
  'main' : {
    'patterns' : [
      {
        'match' : '(#.*$)'
        'name' : 'comment.NLex'
      }
      {
        'match' : '(option)(\\s+)(\\w+)(\\s+)(on|off)$'
        'captures' : {
          '1' : {
            'name' : 'keyword.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'entity.name.type.class.NLex'
          }
          '4' : {
            'name' : 'punctuation.NLex'
          }
          '5' : {
            'name' : 'keyword.other.special-method.NLex'
          }
        }
      }
      {
        'begin' : '(tag)(\\s*)(pos)'
        'beginCaptures' : {
          '1' : {
            'name' : 'keyword punctuation.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'keyword.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#main__1'
          }
        ]
        'end' : '(^(?=.{0,1})(?:|))'
        'endCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
      {
        'begin' : '(\\w+)(\\s*)(::)'
        'beginCaptures' : {
          '1' : {
            'name' : 'entity.name.type.class.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'keyword punctuation.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#main__2'
          }
        ]
        'end' : '(^(?=.{0,1})(?:|))'
        'endCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
      {
        'begin' : '(\\w+)(\\s*)(:-)(\\s*)("[^\\x{0022}]*")'
        'beginCaptures' : {
          '1' : {
            'name' : 'entity.name.type.class.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'keyword punctuation.NLex'
          }
          '4' : {
            'name' : 'punctuation.NLex'
          }
          '5' : {
            'name' : 'punctuation.NLex'
          }
        }
        'contentName' : 'entity.name.type.class.NLex'
        'end' : '(^(?=.{0,1})(?:|))'
        'endCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
      {
        'begin' : '(\\w+)(\\s*)(:-)'
        'beginCaptures' : {
          '1' : {
            'name' : 'entity.name.type.class.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'keyword punctuation.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#main__4'
          }
        ]
        'end' : '(^(?=.{0,1})(?:|))'
        'endCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
      {
        'begin' : '(\\w+)(\\s*)(--)'
        'beginCaptures' : {
          '1' : {
            'name' : 'entity.name.type.class.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'keyword punctuation.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#main__5'
          }
        ]
        'end' : '(^(?=.{0,1})(?:|))'
        'endCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
      {
        'begin' : '(normalise)(\\s+)(\\{)((?:[^\\x{007d}]|\\\\})*)(\\})(\\s+)(to)(.)'
        'beginCaptures' : {
          '1' : {
            'name' : 'keyword.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'punctuation.NLex'
          }
          '4' : {
            'name' : 'constant.character.NLex'
          }
          '5' : {
            'name' : 'punctuation.NLex'
          }
          '6' : {
            'name' : 'punctuation.NLex'
          }
          '7' : {
            'name' : 'keyword.NLex'
          }
          '8' : {
            'name' : 'constant.character.NLex'
          }
        }
        'contentName' : 'constant.character.NLex'
        'end' : '(^(?=.{0,1})(?:|))'
        'endCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
      {
        'begin' : '(stopword)(\\s*)'
        'beginCaptures' : {
          '1' : {
            'name' : 'keyword.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#stopwords'
          }
        ]
        'end' : '(^)'
        'endCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
      {
        'begin' : '(ignore)(\\s*)'
        'beginCaptures' : {
          '1' : {
            'name' : 'keyword.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#ignores'
          }
        ]
        'end' : '(^)'
        'endCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
    ]
  }
  'ignores' : {
    'patterns' : [
      {
        'match' : '(\\w+)(\\s*)'
        'captures' : {
          '1' : {
            'name' : 'entity.name.type.class.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
    ]
  }
  'kaleid' : {
    'patterns' : [
      {
        'match' : '(\\d+|\\d*\\.\\d+)'
        'name' : 'constant.numeric.comment.block.preprocessor.NLex'
      }
      {
        'match' : '(")((?:[^\\x{0022}]|\\\\")*)(")'
        'captures' : {
          '1' : {
            'name' : 'string.comment.block.preprocessor.NLex'
          }
          '2' : {
            'name' : 'string.comment.block.preprocessor.NLex'
          }
          '3' : {
            'name' : 'string.comment.block.preprocessor.NLex'
          }
        }
      }
      {
        'match' : '(\\b(?:if|then|else|def|extern|for|in|var|global)\\b)'
        'name' : 'keyword.comment.block.preprocessor.NLex'
      }
      {
        'match' : '(\\w+)(\\s*\\(\\s*)'
        'captures' : {
          '1' : {
            'name' : 'entity.name.function.comment.block.preprocessor.NLex'
          }
          '2' : {
            'name' : 'keyword.operator.comment.block.preprocessor.NLex'
          }
        }
      }
      {
        'match' : '(\\)|,)'
        'name' : 'keyword.operator.comment.block.preprocessor.NLex'
      }
      {
        'match' : '(\\w+)'
        'name' : 'entity.name.function.comment.block.preprocessor.NLex'
      }
      {
        'match' : '([^\\x{0022}\\w]+)'
        'name' : 'keyword.operator.comment.block.preprocessor.NLex'
      }
    ]
  }
  'main__1' : {
    'patterns' : [
      {
        'begin' : '(\\s*)'
        'beginCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#tag_pos'
          }
        ]
        'end' : '(^(?=.{0,1})(?:|))'
        'endCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
    ]
  }
  'main__2' : {
    'patterns' : [
      {
        'begin' : '(\\s*)'
        'beginCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#regularExpression'
          }
        ]
        'end' : '(^|\\)|\\])'
        'endCaptures' : {
          '1' : {
            'name' : 'string.regexp.NLex'
          }
        }
      }
    ]
  }
  'main__3' : {
    'patterns' : [
    ]
  }
  'main__4' : {
    'patterns' : [
      {
        'begin' : '(\\s*)'
        'beginCaptures' : {
          '1' : {
            'name' : 'punctuation.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#regularExpression'
          }
        ]
        'end' : '(^|\\)|\\])'
        'endCaptures' : {
          '1' : {
            'name' : 'string.regexp.NLex'
          }
        }
      }
    ]
  }
  'main__5' : {
    'patterns' : [
      {
        'match' : '(-?)(")(?:(\\\\uc\\{[^\\x{007d}]*\\})|((?:[^\\x{0022}]|\\\\")*))(")'
        'captures' : {
          '1' : {
            'name' : 'keyword punctuation.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'entity.name.type.class.NLex'
          }
          '4' : {
            'name' : 'string.NLex'
          }
          '5' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
    ]
  }
  'main__6' : {
    'patterns' : [
    ]
  }
  'regularExpression' : {
    'patterns' : [
      {
        'begin' : '(\\()'
        'beginCaptures' : {
          '1' : {
            'name' : 'string.regexp.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#regularExpression'
          }
        ]
        'end' : '(^|\\)|\\])'
        'endCaptures' : {
          '1' : {
            'name' : 'string.regexp.NLex'
          }
        }
      }
      {
        'match' : '(\\{)(\\d+)(,?)(\\d+)?(\\})'
        'captures' : {
          '1' : {
            'name' : 'constant.character.escape.NLex'
          }
          '2' : {
            'name' : 'string.other.link.NLex'
          }
          '3' : {
            'name' : 'string.regexp.NLex'
          }
          '4' : {
            'name' : 'string.other.link.NLex'
          }
          '5' : {
            'name' : 'constant.character.escape.NLex'
          }
        }
      }
      {
        'begin' : '(\\||\\\\[^pgE])'
        'beginCaptures' : {
          '1' : {
            'name' : 'string.other.link.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#regularExpression'
          }
        ]
        'end' : '(^|\\)|\\])'
        'endCaptures' : {
          '1' : {
            'name' : 'string.regexp.NLex'
          }
        }
      }
      {
        'begin' : '(\\\\E\\{)'
        'beginCaptures' : {
          '1' : {
            'name' : 'constant.character.escape.comment.block.preprocessor.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#kaleid'
          }
        ]
        'end' : '(\\})'
        'endCaptures' : {
          '1' : {
            'name' : 'constant.character.escape.comment.block.preprocessor.NLex'
          }
        }
      }
      {
        'begin' : '(\\\\g)(\\d+)'
        'beginCaptures' : {
          '1' : {
            'name' : 'string.other.link.NLex'
          }
          '2' : {
            'name' : 'string.regexp.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#regularExpression'
          }
        ]
        'end' : '(^|\\)|\\])'
        'endCaptures' : {
          '1' : {
            'name' : 'string.regexp.NLex'
          }
        }
      }
      {
        'begin' : '(\\\\p)(\\{)(\\w+)(\\})'
        'beginCaptures' : {
          '1' : {
            'name' : 'string.other.link.NLex'
          }
          '2' : {
            'name' : 'constant.character.escape.NLex'
          }
          '3' : {
            'name' : 'string.regexp.NLex'
          }
          '4' : {
            'name' : 'constant.character.escape.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#regularExpression'
          }
        ]
        'end' : '(^|\\)|\\])'
        'endCaptures' : {
          '1' : {
            'name' : 'string.regexp.NLex'
          }
        }
      }
      {
        'match' : '(\\{\\{)(\\w+)(\\}\\})'
        'captures' : {
          '1' : {
            'name' : 'constant.character.escape.NLex'
          }
          '2' : {
            'name' : 'entity.name.type.class.NLex'
          }
          '3' : {
            'name' : 'constant.character.escape.NLex'
          }
        }
      }
      {
        'begin' : '(\\[)'
        'beginCaptures' : {
          '1' : {
            'name' : 'string.regexp.NLex'
          }
        }
        'patterns' : [
          {
            'include' : '#regularExpression__1'
          }
        ]
        'end' : '(\\])'
        'endCaptures' : {
          '1' : {
            'name' : 'string.regexp.NLex'
          }
        }
      }
      {
        'match' : '(\\+|\\*|\\?)'
        'name' : 'string.regexp.NLex'
      }
      {
        'match' : '(.)'
        'name' : 'constant.character.NLex'
      }
    ]
  }
  'regularExpression__1' : {
    'patterns' : [
      {
        'match' : '([^\\x{005c}\\]])'
        'name' : 'string.regexp.NLex'
      }
      {
        'match' : '(\\\\)(.)'
        'captures' : {
          '1' : {
            'name' : 'string.other.link.NLex'
          }
          '2' : {
            'name' : 'string.other.link.NLex'
          }
        }
      }
    ]
  }
  'stopwords' : {
    'patterns' : [
      {
        'match' : '(-?)(")([^\\x{0022}]*)(")'
        'captures' : {
          '1' : {
            'name' : 'keyword punctuation.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'string.NLex'
          }
          '4' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
    ]
  }
  'tag_pos' : {
    'patterns' : [
      {
        'match' : '(every)(\\s*)(\\d+)(\\s*)(tokens?)'
        'captures' : {
          '1' : {
            'name' : 'keyword punctuation.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'keyword.NLex'
          }
          '4' : {
            'name' : 'punctuation.NLex'
          }
          '5' : {
            'name' : 'keyword punctuation.NLex'
          }
        }
      }
      {
        'match' : '(from)(\\s*)("(?:[^\\x{0022}]|\\\\")*")'
        'captures' : {
          '1' : {
            'name' : 'keyword punctuation.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'string.NLex'
          }
        }
      }
      {
        'match' : '(with)?(\\s*)(delimiter)(\\s*)(\\w+)(\\{)([^\\x{007b}]+)(\\})'
        'captures' : {
          '1' : {
            'name' : 'keyword punctuation.NLex'
          }
          '2' : {
            'name' : 'punctuation.NLex'
          }
          '3' : {
            'name' : 'keyword punctuation.NLex'
          }
          '4' : {
            'name' : 'punctuation.NLex'
          }
          '5' : {
            'name' : 'entity.name.type.class.NLex'
          }
          '6' : {
            'name' : 'punctuation.NLex'
          }
          '7' : {
            'name' : 'constant.character.NLex'
          }
          '8' : {
            'name' : 'punctuation.NLex'
          }
        }
      }
    ]
  }
}
