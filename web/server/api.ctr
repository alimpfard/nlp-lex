import generate: \*.

api postEndpoints.

type UserArguments [
    string target_arch,
    string target_vendor,
    string target_sys,
    string target_env,
    string target,
    
    boolean library,
    boolean llvm,
    string object_format,
    string relocation_model,
    string cpu,
    string features
].

type Arguments [
    boolean dry_run,
    string output_name,
    UserArguments arguments
].

model Job [
    string source,
    Arguments arguments,
    boolean is_done,
    string output_name
].

type namedFile [
    string name,
    string data
].

model CompiledFile [
    namedFile[] files
].

type Diagnostic [
    int line,
    int column,
    enum['error', 'warning'] level,
    string data
].

function resolveJobReference [
    reference[Job] job_id
] -> Job job.

function resolveDownloadReference [
    reference[CompiledFile] file_id
] -> CompiledFile files.

var resource is Object cnew: {
    resources => Array new.
    on: 'process:' do: {:path
        redirect from: path to: '/index?res=$$path'.
        my resources push: path.
    }.
    on: 'enum' do: {
        ^enum applyAll: my resources.
    }.
}.

redirect from: '' to: '/index?res=editor.html'.

resource 'res/ace/mode-nlex.js' 'editor.html' 'res/ace/ace.js' 'res/ace/theme-twilight.js'.


action index pure [
    Request [
        resource enum res
    ],
    Response string,
    Action [ 'set content type' ] 
].

endpoint run [
    Request [
        string source,
        UserArguments arguments
    ],
    Response [
        Diagnostic[] diagnostics,
        string identifier,
        string dot_data
    ]
].

action compile [
    Request [
        reference[Job] job_id
    ],
    Response [
    reference[CompiledFile] file_id
    ],
    Action [
        'compile',
        'store in database'
    ],
    Before [ resolveJobReference ]
].

action download pure [
    Request [
        reference[CompiledFile] file_id
    ],
    Response [],
    Action [
        'download'
    ],
    Before [ resolveDownloadReference ]
].

action examples pure [
    Request [
        string foo['']
    ],
    Response string[],
    Action [ ]
].

var examples is enum applyAll: (File list: '../../examples', fmap!: \:x x @ 'file', filter_v: \:x x endsWith: '.nlex').

action example pure [
    Request [
        examples name
    ],
    Response [
        string example
    ],
    Action [ ]
].

api log: \debug.
api generate.
